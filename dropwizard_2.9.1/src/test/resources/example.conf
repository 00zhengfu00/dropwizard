{
  "saying": "Oh, hello!",

  "http": {
    // The type of connector to use. Other valid values are "select_channel" or
    // "socket".
    "connector": "blocking_channel",

    // The maximum idle time for a connection.
    "max_idle_time_seconds": 300,

    // The number of acceptor threads to set.
    "acceptor_threads": 1,
    
    // Set the priority offset of the acceptor threads. The priority is adjusted
    // by this amount (default 0) to either favour the acceptance of new threads
    // and newly active connections or to favour the handling of already
    // dispatched connections.
    // 
    // Threads have priorities between 1 and 10, with 1 being the lowest
    // priority a thread can have and 10 being the highest, and default to
    // having a priority of 5. A priority offset of -4, therefore, would drop
    // the priority of the acceptor threads to 1; a priority offset of 5 would
    // raise the priority of the acceptor threads to 10.
    "acceptor_priority_offset": 0,
    
    // The size of the backlog queue on the server socket. A value <=0 will
    // result in the server socket using the system default.
    "accept_queue_size": 0,
    
    // The maximum number of IO buffers to keep pooled.
    "max_buffers": 1024,
    
    // The default size of buffers to use for parsing requests.
    "request_buffer_size_kilobytes": 12,
    
    // The default size of buffers to use for parsing request headers.
    "request_header_buffer_size_kilobytes": 6,
    
    // The default size of buffers to use for responses.
    "response_buffer_size_kilobytes": 32,
    
    // The default size of buffers to use for response headers.
    "response_header_buffer_size_kilobytes": 6,
    
    // If true, the server socket will be opened in SO_REUSEADDR mode.
    "reuse_address": true,
    
    // If a non-zero, positive value, enables SO_LINGER for the server socket
    // for the specified number of seconds. If zero or less than zero, disables
    // SO_LINGER for the server socket.
    "so_linger_time_seconds": -1,

    // Set the number of connections, which if exceeded places the manager in
    // low resources state. This is not an exact measure as the connection count
    // is averaged over the select sets. Only valid for select_channel
    // connector.
    //"low_resources_connections": 25000,

    // The amount of time that a connection is allowed to be idle when there are
    // more than `low_resources_connections` connections. This allows the server
    // to rapidly close idle connections in order to gracefully handle high load
    // situations.
    "low_resources_max_idle_time_seconds": 5,

    // The TCP/IP port Jetty will host your server on.
    "port": 8080,

    // Maximum number of threads.
    "max_threads": 50,

    // Minimum number of thread to keep alive.
    "min_threads": 10,

    // Number of milliseconds to wait for connections to complete while
    // gracefully shutting down.
    "shutdown_milliseconds": 2000,

    // The hostname of the interface on which to listen. If not set, it will
    // listen on all available interfaces.
    // "hostname": "localhost",

    // Whether or not the server is downstream from a proxy which appends
    // X-Forwarded-For headers.
    "forwarded": false,
    
    // If true, Jetty will use NIO direct buffers for requests and responses.
    "use_direct_buffers": true
  },

  "metrics": {
    // The TCP/IP port Jetty will expose your metrics on.
    "port": 8081
  },

  "logging": {
    // The default logger level.
    "level": "info",

    // A set of specific logger levels.
    "loggers": {
      "com.yammer.notifications": "info"
    },

    "console": {
      // Whether or not to output log statements to STDOUT.
      "enabled": true,

      // The log level threshold for console logging.
      "threshold": "all"
    },
    "file": {
      // Whether or not to output log statement to a log file.
      "enabled": false,

      // The filename pattern for the log file.
      "filename": "./logs/example.log",

      // Let logs get to 50MB in size.
      "max_log_size_kilobytes": 51200,

      // Retain the last five log files.
      "retain_files": 5,

      // The log level threshold for file logging.
      "threshold": "all"
    },
    "syslog": {
      // Whether or not to output log statements to syslog.
      "enabled": false,
      // The hostname (and optional port) of the syslog server.
      "host": "localhost",
      // The facility to be used when logging to syslog.
      "facility": "local0"
    }
  },

  "request_log": {
    // Whether or not to log all requests to an NSCA-formatted log.
    "enabled": true,

    // The filename of the log file, where "yyyy_mm_dd" will be replaced with the
    // current date.
    "filename": "./logs/yyyy_mm_dd.log",

    // The maximum number of logfiles to retain.
    "retain_days": 90
  }
}
