{
  "saying": "Oh, hello!",

  "http": {
    // The type of connector to use. Other valid values are "select_channel" or
    // "socket".
    "connector": "blocking_channel",

    // The maximum idle time for a connection. Only valid for select_channel
    // connector.
    //"max_idle_time_seconds": 300,

    // The number of acceptor threads to set. Only valid for select_channel
    // connector.
    //"acceptor_threads": 2,

    // Set the number of connections, which if exceeded places the manager in
    // low resources state. This is not an exact measure as the connection count
    // is averaged over the select sets. Only valid for select_channel
    // connector.
    //"low_resources_connections": 25000,

    // The amount of time that a connection is allowed to be idle when there are
    // more than `low_resources_connections` connections. This allows the server
    // to rapidly close idle connections in order to gracefully handle high load
    // situations. Only valid for select_channel connector.
    //"low_resources_max_idle_time_seconds": 5,

    // The TCP/IP port Jetty will host your server on.
    "port": 8080,

    // Maximum number of threads.
    "max_threads": 50,

    // Minimum number of thread to keep alive.
    "min_threads": 10,

    // Number of milliseconds to wait for connections to complete while
    // gracefully shutting down.
    "shutdown_milliseconds": 2000,

    // The hostname of the interface on which to listen. If not set, it will
    // listen on all available interfaces.
    // "hostname": "localhost",

    // Whether or not the server is downstream from a proxy which appends
    // X-Forwarded-For headers.
    "forwarded": false
  },

  "metrics": {
    // The TCP/IP port Jetty will expose your metrics on.
    "port": 8081
  },

  "logging": {
    // The default logger level.
    "level": "info",

    // A set of specific logger levels.
    "loggers": {
      "com.yammer.notifications": "info"
    },

    "console": {
      // Whether or not to output log statements to STDOUT.
      "enabled": true,

      // The log level threshold for console logging.
      "threshold": "all"
    },
    "file": {
      // Whether or not to output log statement to a log file.
      "enabled": false,

      // The filename pattern for the log file.
      "filename": "./logs/example.log",

      // Let logs get to 50MB in size.
      "max_log_size_kilobytes": 51200,

      // Retain the last five log files.
      "retain_files": 5,

      // The log level threshold for file logging.
      "threshold": "all"
    },
    "syslog": {
      // Whether or not to output log statements to syslog.
      "enabled": false,
      // The hostname (and optional port) of the syslog server.
      "host": "localhost",
      // The facility to be used when logging to syslog.
      "facility": "local0"
    }
  },

  "request_log": {
    // Whether or not to log all requests to an NSCA-formatted log.
    "enabled": false,

    // Whether to append to existing log files or overwrite them.
    "append": true,

    // The filename of the log file, where "yyyy_mm_dd" will be replaced with the
    // current date.
    "filename": "./logs/yyyy_mm_dd.log",

    // Whether to log referrer, user-agent, and x-forwarded-for values.
    "extended": false,

    // URIs which will not be logged.
    "ignore_paths": [],

    // Whether to log cookie values.
    "include_cookies": false,

    // Whether to log the number of milliseconds a response took.
    "include_latency": true,

    // Whether to log the Host header of requests.
    "include_server": false,

    // The timezone that timestamps should be in.
    "timezone": "UTC",

    // The maximum number of logfiles to retain.
    "retain_days": 90
  }
}
